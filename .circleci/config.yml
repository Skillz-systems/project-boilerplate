version: 2.1


jobs:
  
  deploy-processflow-test:
    docker:
        - image: cimg/php:8.3
    working_directory: ~/repo
    steps:
      - checkout
      # install dependencies
      - setup_remote_docker:
          version: 20.10.12
          docker_layer_caching: true
      - run:
          name: rename .env.example file to .env 
          command: |
            mv .env.example .env

      - run:
          name: Install dependencies
          command:  CI=false composer clear-cache && CI=false  composer install &&  CI=false php artisan key:generate

    
      - run:
          name: Run Test
          command:  CI=false php artisan test

    

      # - run:
      #     name: Update known hosts
      #     command:  CI=false ssh-keyscan -H 185.160.67.60 >> ~/.ssh/known_hosts && cat ~/.ssh/known_hosts
      # - run:
      #     name: find and replace in document
      #     command: |
      #       sed -i -e 's:/public/index.php:/index.php:g' public/index.php && sed -i -e 's:/../vendor/autoload.php:/vendor/autoload.php:g' public/index.php && sed -i -e 's:DB_DATABASE=forge:DB_DATABASE=skillz_revenuehub:g' .env && sed -i -e 's:DB_USERNAME=forge:DB_USERNAME=skillz_revenuehub:g' .env  && sed -i -e 's:/../bootstrap/app.php:/bootstrap/app.php:g' public/index.php && sed -i -e 's:DB_PASSWORD=forge:DB_PASSWORD="Ubuxa##99":g' .env

      
      # - run:
      #     name: ssh login  
      #     command: |
      #        rsync --delete -va -e 'ssh -p 7822 -o StrictHostKeyChecking=no'   app database phpunit.xml storage vendor artisan .env tests bootstrap composer.json resources composer.lock routes config package.json public/ public skillz@185.160.67.60:revenuehub/api
      # - run:
      #     name: ssh and effect migration  
      #     command: |
      #        ssh -p 7822 -t skillz@185.160.67.60 "cd revenuehub/api && php artisan migrate"
  deploy-processflow-dev:
    docker:
        - image: cimg/php:8.3
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
          fingerprints: 
          - "SHA256:XM+2xRjrCCSH/Frn3FMhEbTaB4RS9hNa9Wm54+iINww"
      - checkout
      # install dependencies
      - setup_remote_docker:
          version: 20.10.12
          docker_layer_caching: true
      - run:
          name: rename .env.example file to .env 
          command: |
            mv .env.example .env

      - run:
          name: Install dependencies
          command:  CI=false composer clear-cache && CI=false  composer install &&  CI=false php artisan key:generate

      - run: sudo apt update
      - run: sudo apt-get install rsync

      - run:
          name: find and replace in document
          command: |
            sed -i -e 's:/public/index.php:/index.php:g' public/index.php && sed -i -e 's:/../vendor/autoload.php:/vendor/autoload.php:g' public/index.php && sed -i -e 's:DB_DATABASE=forge:DB_DATABASE=skillz_nnpc_processflow:g' .env && sed -i -e 's:DB_USERNAME=forge:DB_USERNAME=skillz_nnpc:g' .env  && sed -i -e 's:/../bootstrap/app.php:/bootstrap/app.php:g' public/index.php && sed -i -e 's:DB_PASSWORD=forge:DB_PASSWORD=nnpcNGML:g' .env && sed -i -e "s|USERS_MS=forge|USERS_MS=${USERS_MSDEV}|g" .env && sed -i -e "s:RABBITMQ_HOST=forge:RABBITMQ_HOST=${RABBITMQ_HOST}:g" .env && sed -i -e "s:RABBITMQ_PORT=forge:RABBITMQ_PORT=${RABBITMQ_PORT}:g" .env && sed -i -e "s:RABBITMQ_USER=forge:RABBITMQ_USER=${RABBITMQ_USER}:g" .env && sed -i -e "s:RABBITMQ_PASSWORD=forge:RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}:g" .env && sed -i -e "s:RABBITMQ_VHOST=forge:RABBITMQ_VHOST=${RABBITMQ_VHOST}:g" .env
      
      - run:
          name: ssh login  
          command: |
             rsync --delete -va -e 'ssh -p 7822 -o StrictHostKeyChecking=no'   app database phpunit.xml storage vendor artisan .env tests bootstrap composer.json resources composer.lock routes config package.json public/ public skillz@185.160.67.60:nnpc/api/processflow
      - run:
          name: ssh and effect migration  
          command: |
             ssh -p 7822 -t skillz@185.160.67.60 "cd nnpc/api/processflow && php artisan migrate  " 
            #  php artisan queue:work && php artisan schedule:work
workflows:
  version: 2
  nnpc_processflow_deploy:
    jobs:
      - deploy-processflow-test # Use the pre-configured job, deploy-via-git
  
      - deploy-processflow-dev: 
          context: nnpc
          requires:
            - deploy-processflow-test
          filters:
            branches:
              only: dev
      
      # - deploy-nest: # Use the pre-configured job, deploy-via-git
      #     filters:
      #       branches:
      #         only: nest